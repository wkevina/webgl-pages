{"version":3,"sources":["webpack:///./src/demo/particle.js","webpack:///./src/js/particle.js"],"names":["mountPoint","document","getElementById","canvas","createElement","classList","add","appendChild","app","el","resolution","width","height","debug","clearColor","start","load","basePath","programs","name","opts","transformFeedbackVaryings","console","log","gl","getParameter","MAX_ARRAY_TEXTURE_LAYERS","PixelBufferWrapper","constructor","buffer","components","setPixel","x","y","value","index","length","set","BarrierTextureBuilder","Float32Array","angle","i","Math","random","PI","cos","sin","pixelBuffer","line","end","thickness","normal","inv_mag","sqrt","bresenham","rect","origin","size","x0","y0","x1","y1","cb","dx","abs","dy","sx","sy","err","e2","wallBuilder","MAX_PARTICLES","textures","wallForce","internalFormat","RG32F","format","RG","type","FLOAT","src","magMag","NEAREST","run","loader","loading","grid","addGrid","particles","game","maxParticles","framebufferRenderer","textureInfo","texture","framebuffer","requestAnimationFrame","render","adjustViewport","clear","attach","draw","detach","position","randomColor","ParticleSystem","frameCount","setup","bufferInfo","simulate","createBufferInfoFromArrays","numComponents","drawType","DYNAMIC_DRAW","velocity","color","Uint8Array","data","normalized","STATIC_DRAW","positionFeedback","DYNAMIC_COPY","velocityFeedback","getProgram","initParticles","setAttribInfoBufferFromArray","attribs","transformFeedback","createTransformFeedback","max_particles","bounds","max_speed","setPosition","setVelocity","setColor","speed","randColor","setColors","floor","useProgram","program","bindVertexArray","setUniforms","projection","getTexture","setBuffersAndAttributes","bindTransformFeedback","TRANSFORM_FEEDBACK","bindBufferBase","TRANSFORM_FEEDBACK_BUFFER","beginTransformFeedback","POINTS","drawBufferInfo","endTransformFeedback","bindBuffer","COPY_READ_BUFFER","COPY_WRITE_BUFFER","copyBufferSubData"],"mappings":"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","file":"particle.bundle.js","sourcesContent":["import {_} from 'underscore';\n\nimport {Sprite} from 'components.js';\nimport {GridOutline, SpriteRenderer} from 'graphics.js';\nimport {ParticleSystem} from 'particle.js';\nimport App from 'app.js';\nimport '../css/app.css';\n\nconst mountPoint = document.getElementById('content');\nconst canvas = document.createElement('canvas');\ncanvas.classList.add('game')\nmountPoint.appendChild(canvas);\n\nconst app = new App({\n    el: canvas,\n    resolution: {\n        width: 320,\n        height: 240\n    },\n    debug: false,\n    clearColor: [0,0,0,1]//[0.2, 0.2, 0.2, 1]\n});\n\napp.start();\n\napp.load({\n    basePath: 'shaders/',\n    programs: [\n        {\n            name: 'particle.simulate',\n            opts: {\n                transformFeedbackVaryings: ['v_position', 'v_velocity']\n            }\n        },\n         'particle.draw',\n         'grid',\n         'sprite'\n     ]\n});\n\nconsole.log(app.gl.getParameter(app.gl.MAX_ARRAY_TEXTURE_LAYERS));\n\nclass PixelBufferWrapper {\n    constructor(opts) {\n        let {buffer, width, height, components} = opts;\n        this.buffer = buffer;\n        this.width = width;\n        this.height = height;\n        this.components = components;\n    }\n\n    setPixel(x, y, value) {\n        const index = (y*this.width + x)*this.components;\n        if (index >= 0 && index < this.buffer.length) {\n            this.buffer.set(value, index);\n        }\n    }\n}\n\nclass BarrierTextureBuilder {\n    constructor(opts) {\n        let {width, height} = opts;\n\n        this.buffer = new Float32Array(2 * width * height);\n\n        let angle = 0;\n        let length = 0;\n        for (let i = 0; i < width * height; i++) {\n            length += Math.random() * 0.5;\n            if (length > 5) length = 5;\n            if (length < -5) length = -5;\n            angle += Math.random() * Math.PI;\n            this.buffer[i * 2] = Math.cos(angle) * length * 0.01;\n            this.buffer[i * 2 + 1] = Math.sin(angle) * length * 0.01;\n        }\n\n        this.pixelBuffer = new PixelBufferWrapper({buffer: this.buffer, width, height, components: 2});\n\n        this.width = width;\n        this.height = height;\n    }\n\n    line(start, end, thickness) {\n        let normal = [ - (end[1] - start[1]), end[0] - start[0] ];\n        let inv_mag = 1 / Math.sqrt(normal[0]*normal[0] + normal[1]*normal[1]);\n        normal = [normal[0] * inv_mag, normal[1] * inv_mag];\n\n        bresenham(start[0], start[1], end[0], end[1], (x, y) => {\n            this.pixelBuffer.setPixel(x, y, normal);\n        });\n    }\n\n    rect(origin, size) {\n        this.line([origin[0], origin[1] + size[1]], [origin[0] + size[0], origin[1] + size[1]]);\n        this.line([origin[0] + size[0], origin[1] + size[1]], [origin[0] + size[0], origin[1]]);\n\n        this.line([origin[0] + size[0], origin[1]], [origin[0], origin[1]]);\n        this.line([origin[0], origin[1]], [origin[0], origin[1] + size[1]]);\n    }\n\n}\n\nfunction bresenham(x0, y0, x1, y1, cb){\n    var dx = Math.abs(x1-x0);\n    var dy = Math.abs(y1-y0);\n    var sx = (x0 < x1) ? 1 : -1;\n    var sy = (y0 < y1) ? 1 : -1;\n    var err = dx-dy;\n\n    while(true){\n        cb(x0,y0);\n\n        if ((x0==x1) && (y0==y1)) break;\n        var e2 = 2*err;\n        if (e2 >-dy){ err -= dy; x0  += sx; }\n        if (e2 < dx){ err += dx; y0  += sy; }\n    }\n}\n\nconst wallBuilder = new BarrierTextureBuilder({width: 320, height: 240});\n\nwallBuilder.rect([160, 60], [60, 60])\n\nwallBuilder.line([0, 150], [106, 20]);\nwallBuilder.line([0, 150-1], [106, 20-1]);\n\nwallBuilder.line([106, 20], [214, 20]);\nwallBuilder.line([106, 20-1], [214, 20-1]);\n\nwallBuilder.line([214, 20], [320, 150]);\nwallBuilder.line([214, 20-1], [320, 150-1]);\n\n//\n// for (let i = 0; i < 20; i++) {\n//     wallBuilder.line([0, 0 + i], [319, 239 + i]);\n// }\n// for (let i = 0; i < 20; i++) {\n//     wallBuilder.line([319 + i, 238], [1 + i, 0]);\n// }\n//\n// for (let i = 0; i < 20; i++) {\n//     wallBuilder.line([0, 239 + i], [319, 0 + i]);\n// }\n// for (let i = 0; i < 20; i++) {\n//     wallBuilder.line([319, 0 - i], [0, 239 - i]);\n// }\n\n\nconst MAX_PARTICLES = 10000;\n\n\napp.load({\n    textures: {\n        wallForce: {\n            internalFormat: app.gl.RG32F,\n            format: app.gl.RG,\n            type: app.gl.FLOAT,\n            src: wallBuilder.buffer,\n            width: wallBuilder.width,\n            height: wallBuilder.height,\n            magMag: app.gl.NEAREST\n        }\n    }\n});\n\nasync function run() {\n    await app.loader.loading;\n\n    const grid = new GridOutline(app);\n    grid.addGrid( 8,  8, [0.4, 0.1, 0.9, 0.4], 0.25);\n    //grid.addGrid(16, 16, [0.1, 0.3, 0.9, 0.4], 0.5);\n    //grid.addGrid(32, 32, [0,   0.5, 0.9, 0.3], 1);\n\n    const particles = new ParticleSystem({game: app, maxParticles: MAX_PARTICLES});\n\n    const framebufferRenderer = new SpriteRenderer({\n        game: app,\n        textureInfo: {\n            texture: app.framebuffer.texture,\n            ...app.resolution\n        }\n    });\n\n    requestAnimationFrame(function render() {\n        app.adjustViewport();\n        app.clear();\n        //grid.render();\n        app.framebuffer.attach();\n        app.clear();\n\n        particles.draw();\n        app.framebuffer.detach();\n        app.adjustViewport();\n\n        framebufferRenderer.render([\n            new Sprite({\n                position: [0, 0],\n                size: [app.resolution.width-1, app.resolution.height-1]\n            })\n        ]);\n\n        requestAnimationFrame(render);\n    });\n}\n\nrun();\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/particle.js","import {createProgram} from 'shader-util.js';\nimport {gl} from 'gl.js';\nimport {arraySetter, hsl2rgb} from 'util.js';\nimport twgl from 'twgl.js';\n\nfunction randomColor() {\n    return [\n        ...hsl2rgb(Math.random()*360, Math.random() * 50 + 50, Math.random() * 50 + 20),\n        (Math.random() * 0.6 + 0.4) * 255\n    ];\n}\n\nclass ParticleSystem {\n    constructor(opts) {\n        let {game, maxParticles} = opts;\n        this.game = game;\n        this.maxParticles = maxParticles;\n        this.frameCount = 0;\n        this.setup();\n    }\n\n    setup() {\n        /*\n        Create buffers for particle rendering and simulation\n\n        Simulation requires buffers for\n          - position in\n          - velocity in\n          - position out\n          - velocity out\n        */\n\n        this.bufferInfo = {\n            simulate: twgl.createBufferInfoFromArrays(gl, {\n                position: {\n                    numComponents: 2,\n                    drawType: gl.DYNAMIC_DRAW\n                },\n                velocity: {\n                    numComponents: 2,\n                    drawType: gl.DYNAMIC_DRAW\n                },\n                color: {\n                    type: Uint8Array,\n                    data: this.maxParticles * 4,\n                    numComponents: 4,\n                    normalized: true,\n                    drawType: gl.STATIC_DRAW\n                },\n                positionFeedback: {\n                    numComponents: 2,\n                    drawType: gl.DYNAMIC_COPY,\n                    data: this.maxParticles * 2\n                },\n                velocityFeedback: {\n                    numComponents: 2,\n                    drawType: gl.DYNAMIC_COPY,\n                    data: this.maxParticles * 2\n                }\n            })\n        };\n\n        this.programs = {\n            simulate: this.game.getProgram('particle.simulate')\n        }\n\n        const {position, velocity, color} = this.initParticles();\n        this.color = color;\n\n        twgl.setAttribInfoBufferFromArray(\n            gl,\n            this.bufferInfo.simulate.attribs.position,\n            position\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            gl,\n            this.bufferInfo.simulate.attribs.velocity,\n            velocity\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            gl,\n            this.bufferInfo.simulate.attribs.color,\n            color\n        );\n\n        this.transformFeedback = gl.createTransformFeedback();\n    }\n\n    initParticles() {\n        const max_particles = this.maxParticles;\n        const bounds = {\n            x0: 0,\n            y0: this.game.resolution.height,\n            x1: this.game.resolution.width,\n            y1: this.game.resolution.height\n        };\n        const max_speed = 1;\n\n        const position = new Float32Array(max_particles * 2);\n        const velocity = new Float32Array(max_particles * 2);\n        const color = new Uint8Array(max_particles * 4);\n\n        const setPosition = arraySetter(position);\n        const setVelocity = arraySetter(velocity);\n        const setColor = arraySetter(color);\n\n        for (let i = 0; i < max_particles; i++) {\n            const angle = Math.PI * Math.random();\n            const speed = Math.random() * max_speed;\n            const randColor = randomColor();\n\n            setVelocity([Math.cos(angle) * speed + 0.01, Math.sin(angle) * speed + 0.01]);\n            setPosition([bounds.x0 + Math.random() * (bounds.x1 - bounds.x0), bounds.y0 + Math.random() * (bounds.y1 - bounds.y0)]);\n            setColor(randColor);\n        }\n\n        return {position, velocity, color};\n    }\n\n    setColors() {\n        const max_particles = this.maxParticles;\n\n        for (let i = 0; i < max_particles / 10; i++) {\n            this.color.set(randomColor(), Math.floor(Math.random() * max_particles) * 4);\n        }\n\n        twgl.setAttribInfoBufferFromArray(\n            gl,\n            this.bufferInfo.simulate.attribs.color,\n            this.color\n        );\n    }\n\n    draw() {\n        gl.useProgram(this.programs.simulate.program);\n\n        gl.bindVertexArray(null);\n\n        twgl.setUniforms(this.programs.simulate, {\n            projection: this.game.projection,\n            bounds: [0, 0, this.game.resolution.width, this.game.resolution.height],\n            wallForce: this.game.loader.getTexture('wallForce')\n        });\n\n        if (this.frameCount % 50 === 0) {\n            this.setColors();\n        }\n\n\n        twgl.setBuffersAndAttributes(gl, this.programs.simulate, this.bufferInfo.simulate);\n\n        gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, this.transformFeedback);\n        gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, 0, this.bufferInfo.simulate.attribs.positionFeedback.buffer);\n        gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, 1, this.bufferInfo.simulate.attribs.velocityFeedback.buffer);\n        // gl.enable(gl.RASTERIZER_DISCARD);\n        gl.beginTransformFeedback(gl.POINTS);\n\n        twgl.drawBufferInfo(gl, this.bufferInfo.simulate, gl.POINTS, this.maxParticles);\n\n        gl.endTransformFeedback();\n        gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, null);\n        gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, 0, null);\n        gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, 1, null);\n\n\n        /* Copy positionFeedback buffer to position buffer */\n        gl.bindBuffer(gl.COPY_READ_BUFFER, this.bufferInfo.simulate.attribs.positionFeedback.buffer);\n        gl.bindBuffer(gl.COPY_WRITE_BUFFER, this.bufferInfo.simulate.attribs.position.buffer);\n\n        gl.copyBufferSubData(gl.COPY_READ_BUFFER, gl.COPY_WRITE_BUFFER, 0, 0, this.maxParticles * 2 * 4);\n\n        /* Copy velocityFeedback buffer to velocity buffer */\n        gl.bindBuffer(gl.COPY_READ_BUFFER, this.bufferInfo.simulate.attribs.velocityFeedback.buffer);\n        gl.bindBuffer(gl.COPY_WRITE_BUFFER, this.bufferInfo.simulate.attribs.velocity.buffer);\n\n        gl.copyBufferSubData(gl.COPY_READ_BUFFER, gl.COPY_WRITE_BUFFER, 0, 0, this.maxParticles * 2 * 4);\n\n        gl.bindBuffer(gl.COPY_READ_BUFFER, null);\n        gl.bindBuffer(gl.COPY_WRITE_BUFFER, null);\n\n        this.frameCount++;\n    }\n}\n\nexport {ParticleSystem};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/particle.js"],"sourceRoot":""}