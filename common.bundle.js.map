{"version":3,"sources":["webpack:///./src/js/app.js","webpack:///./src/css/app.css?c080","webpack:///./src/js/gl.js","webpack:///./src/js/util.js","webpack:///./src/js/graphics.js","webpack:///./src/js/shader-util.js","webpack:///./src/js/components.js","webpack:///./src/js/resource.js","webpack:///./src/js/vendor/webgl-debug.js","webpack:///./src/css/app.css"],"names":["logGLCall","functionName","args","console","log","WebGLDebugUtils","glFunctionArgsToString","throwOnGLError","err","funcName","glEnumToString","App","constructor","el","debug","clearColor","resolution","canvas","document","getElementById","gl","getContext","init","makeDebugContext","undefined","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","enable","BLEND","width","height","framebuffer","loader","projection","ortho","create","start","adjustViewport","resizeCanvasToDisplaySize","canvas_width","clientWidth","canvas_height","clientHeight","desired_aspect_ratio","screen_width","screen_height","xoff","yoff","viewport","clear","COLOR_BUFFER_BIT","load","paths","getProgram","key","ret","registerContext","_gl","arraySetter","buffer","count","newElements","set","length","hsl2rgb","h","s","l","r","g","b","m","c","x","isFinite","Math","max","min","abs","round","attachFramebuffer","createFramebuffer","texture","createTexture","bindTexture","TEXTURE_2D","texStorage2D","RGBA8","texParameteri","TEXTURE_MIN_FILTER","NEAREST","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","attach","detach","loadImage","src","Promise","resolve","reject","img","Image","removeListeners","removeEventListener","addEventListener","error","POSITION_COMPONENTS","SIZE_COMPONENTS","SPRITE_RECT_VERTICES","Float32Array","GRID_VERTICES","SpriteRenderer","game","textureInfo","setup","programInfo","_arrays","vertex","data","numComponents","divisor","drawType","STATIC_DRAW","position","DYNAMIC_DRAW","offset","size","texcoord","type","Int16Array","indices","bufferInfo","createBufferInfoFromArrays","vao","createVertexArrayInfo","render","sprites","positions","sizes","offsets","forEach","sprite","spriteIndex","v","compIndex","setAttribInfoBufferFromArray","attribs","useProgram","program","setUniforms","setBuffersAndAttributes","drawBufferInfo","TRIANGLE_STRIP","makeGridVertices","xcells","ycells","w","lineWidth","row","col","GridOutline","grids","addGrid","sx","sy","lineColor","floor","instanceCount","push","gridInfo","line_color","TilemapRenderer","opts","tilemap","textureArray","tileWidth","tileHeight","tile_index","arrays","maxCells","maxWidthInCells","maxHeightInCells","draw","y","tileCount","startIndex","addPosition","addTileIndex","yCoord","xCoord","getTile","tile_size","TilemapTextureBuilder","Object","assign","layers","copyIndex","TEXTURE_2D_ARRAY","texStorage3D","tileCoordinates","z","addTiles","tileWide","detectWidthInTiles","tileHigh","detectHeightInTiles","createElement","ctx","drawImage","copyTile","tileX","tileY","imageData","getImageData","texSubImage3D","RGBA","UNSIGNED_BYTE","pixelStorei","UNPACK_FLIP_Y_WEBGL","isFull","layerWidth","layerHeight","maxIndex","readback","Uint8Array","fb","READ_FRAMEBUFFER","layer","framebufferTextureLayer","readPixels","ImageData","Uint8ClampedArray","createProgram","vertexShaderPath","fragmentShaderPath","vs","fetch","fs","text","createProgramInfo","Sprite","image","getGl","createTextures","errors","textures","images","Loader","cache","Map","textureCache","programCache","programs","loading","basePath","raiseOnFailure","replace","loadPromise","loadPaths","tex","keys","progOpts","name","isObject","has","fp","compact","split","join","vsName","fsName","get","then","path","raise","getTexture","contents","req","ok","status","statusText"],"mappings":"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;AAClB,WAAW,EAAE;AACb,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kBAAkB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA,WAAW,qCAAqC;AAChD;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA;AACA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uBAAuB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+BAA+B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2CAA2C;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,EAAE;AACf,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,EAAE;AACf,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,uBAAuB;AACpC,aAAa,qCAAqC;AAClD;AACA;AACA,aAAa,gCAAgC;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;ACrqCD;AACA;;;AAGA;AACA,+BAAgC,mBAAmB,6BAA6B,kBAAkB,6BAA6B,GAAG,UAAU,iBAAiB,gBAAgB,mBAAmB,GAAG,cAAc,kBAAkB,mBAAmB,oBAAoB,0BAA0B,8BAA8B,GAAG,iBAAiB,mBAAmB,oBAAoB,GAAG;;AAEhY","file":"common.bundle.js","sourcesContent":["import {Loader} from 'resource.js';\nimport {createProgram} from 'shader-util.js';\nimport {mat4} from 'gl-matrix';\nimport {registerContext, gl} from 'gl.js';\nimport {attachFramebuffer} from 'util.js';\nimport twgl from 'twgl.js';\nimport 'vendor/webgl-debug.js'\n\n//import * as glMatrix from 'gl-matrix';\n\nfunction logGLCall(functionName, args) {\n   console.log(\"gl.\" + functionName + \"(\" +\n      WebGLDebugUtils.glFunctionArgsToString(functionName, args) + \")\");\n}\n\nfunction throwOnGLError(err, funcName, args) {\n  throw WebGLDebugUtils.glEnumToString(err) + \" was caused by call to: \" + funcName;\n};\n\nclass App {\n    constructor({el, debug, clearColor, resolution}) {\n        if (typeof canvas === 'string') {\n            this.canvas = document.getElementById(el);\n        } else {\n            this.canvas = el;\n        }\n\n        // create rendering context\n        this.gl = this.canvas.getContext('webgl2');\n        registerContext(this.gl);\n\n        if (debug) {\n            WebGLDebugUtils.init(this.gl);\n            this.gl = WebGLDebugUtils.makeDebugContext(this.gl, undefined, logGLCall);\n        }\n\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n\n        this.clearColor = clearColor || [0.4, 0.4, 0.4, 1];\n        this.resolution = resolution || {width: 352, height: 224};\n\n        this.framebuffer = attachFramebuffer(gl, this.resolution.width, this.resolution.height);\n\n        this.loader = new Loader();\n\n        this.projection = mat4.ortho(mat4.create(), 0, this.resolution.width, 0, this.resolution.height, -1, 1);\n    }\n\n    start() {\n        this.adjustViewport();\n    }\n\n    adjustViewport() {\n        twgl.resizeCanvasToDisplaySize(this.canvas);\n\n        const canvas_width = this.canvas.clientWidth;\n        const canvas_height = this.canvas.clientHeight;\n\n        const desired_aspect_ratio = this.resolution.width / this.resolution.height;\n        let screen_width, screen_height;\n\n        if (canvas_width / canvas_height >= desired_aspect_ratio) {\n            screen_width = desired_aspect_ratio * canvas_height;\n            screen_height = canvas_height;\n        } else {\n            screen_width = canvas_width;\n            screen_height = canvas_width / desired_aspect_ratio;\n        }\n\n        const xoff = (canvas_width - screen_width) / 2;\n        const yoff = (canvas_height - screen_height) / 2;\n\n        this.gl.viewport(xoff, yoff, screen_width, screen_height);\n    }\n\n    clear() {\n        this.gl.clearColor(...this.clearColor);\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n    }\n\n    load(paths) {\n        return this.loader.load(paths);\n    }\n\n    getProgram(key) {\n        const ret = this.loader.getProgram(key);\n\n        if (!ret) {\n            throw `No program loaded for key '${key}'`;\n        }\n\n        return ret;\n    }\n}\n\nexport default App;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/app.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!./app.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./app.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./app.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/app.css\n// module id = 13\n// module chunks = 1","let gl = {};\n\nfunction registerContext(_gl) {\n    gl = _gl;\n}\n\nexport {registerContext, gl};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/gl.js","function arraySetter(buffer) {\n    let count = 0;\n    return function(newElements) {\n        buffer.set(newElements, count);\n        count += newElements.length;\n    }\n}\n\nfunction hsl2rgb (h, s, l) {\n\n    var r, g, b, m, c, x\n\n    if (!isFinite(h)) h = 0\n    if (!isFinite(s)) s = 0\n    if (!isFinite(l)) l = 0\n\n    h /= 60\n    if (h < 0) h = 6 - (-h % 6)\n    h %= 6\n\n    s = Math.max(0, Math.min(1, s / 100))\n    l = Math.max(0, Math.min(1, l / 100))\n\n    c = (1 - Math.abs((2 * l) - 1)) * s\n    x = c * (1 - Math.abs((h % 2) - 1))\n\n    if (h < 1) {\n        r = c\n        g = x\n        b = 0\n    } else if (h < 2) {\n        r = x\n        g = c\n        b = 0\n    } else if (h < 3) {\n        r = 0\n        g = c\n        b = x\n    } else if (h < 4) {\n        r = 0\n        g = x\n        b = c\n    } else if (h < 5) {\n        r = x\n        g = 0\n        b = c\n    } else {\n        r = c\n        g = 0\n        b = x\n    }\n\n    m = l - c / 2\n    r = Math.round((r + m) * 255)\n    g = Math.round((g + m) * 255)\n    b = Math.round((b + m) * 255)\n\n    return [r, g, b];\n}\n\nfunction attachFramebuffer(gl, width, height) {\n    const framebuffer = gl.createFramebuffer();\n    const texture = gl.createTexture();\n\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA8, width, height);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    return {\n        width,\n        height,\n        attach() {\n            gl.viewport(0, 0, width, height);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        },\n        detach() {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        },\n        texture,\n        framebuffer\n    }\n}\n\nfunction loadImage(src) {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n\n        function removeListeners() {\n            img.removeEventListener('load', null);\n            img.removeEventListener('error', null);\n        }\n\n        img.addEventListener('load', () => {\n            removeListeners();\n            resolve(img);\n        });\n\n        img.addEventListener('error', (error) => {\n            removeListeners();\n            reject(error);\n        });\n\n        img.src = src;\n    });\n}\n\nexport {arraySetter, hsl2rgb, attachFramebuffer, loadImage};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/util.js","import {createProgram} from 'shader-util.js';\nimport twgl from 'twgl.js';\nimport {mat4} from 'gl-matrix';\nimport {gl} from 'gl.js';\n\nconst POSITION_COMPONENTS = 2;\nconst SIZE_COMPONENTS = 2;\n\nconst SPRITE_RECT_VERTICES = new Float32Array([\n    0, 0, // bottom left\n    1, 0, // bottom right\n    0, 1, // top left\n    1, 1  // top right\n]);\n\nconst GRID_VERTICES = new Float32Array([\n    0, 0, // bottom left\n    1, 0, // bottom right\n    0, 1, // top left\n    1, 1  // top right\n]);\n\nclass SpriteRenderer {\n    constructor({game, textureInfo}) {\n        this.gl = game.gl;\n        this.loader = game.loader;\n        this.game = game;\n\n        this.textureInfo = textureInfo;\n\n        this.setup();\n    }\n\n    setup() {\n        this.programInfo = this.game.getProgram('sprite');\n\n        this._arrays = {\n            vertex: {\n                data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 0,\n                drawType: this.gl.STATIC_DRAW\n            },\n            position: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            offset: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            size: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            texcoord: {\n                data: [\n                    // 0, 0,\n                    // this.textureInfo.width, 0,\n                    // 0, this.textureInfo.height,\n                    // this.textureInfo.width, this.textureInfo.height\n                    0, 0,\n                    1, 0,\n                    0, 1,\n                    1, 1\n                ],\n                numComponents: 2,\n                divisor: 0,\n                type: Int16Array\n            },\n            indices: {\n                data: [\n                    0,\n                    1,\n                    2,\n                    3\n                ]\n            }\n        }\n\n        this.bufferInfo = twgl.createBufferInfoFromArrays(this.gl, this._arrays);\n        this.vao = twgl.createVertexArrayInfo(this.gl, this.programInfo, this.bufferInfo);\n    }\n\n    render(sprites) {\n        const positions = new Float32Array(2 * sprites.length);\n        const sizes = new Float32Array(2 * sprites.length);\n        const offsets = new Float32Array(2 * sprites.length);\n\n        sprites.forEach((sprite, spriteIndex) => {\n            sprite.position.forEach((v, compIndex) => {\n                positions[spriteIndex * 2 + compIndex] = v;\n            });\n\n            sprite.size.forEach((v, compIndex) => {\n                sizes[spriteIndex * 2 + compIndex] = v;\n            });\n\n            sprite.offset.forEach((v, compIndex) => {\n                offsets[spriteIndex * 2 + compIndex] = v;\n            });\n        });\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.position,\n            positions\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.size,\n            sizes\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.offset,\n            offsets\n        );\n\n        this.gl.useProgram(this.programInfo.program);\n\n        twgl.setUniforms(this.programInfo, {\n            projection: this.game.projection,\n            texture: this.textureInfo.texture\n        });\n\n        twgl.setBuffersAndAttributes(this.gl, this.programInfo, this.vao);\n        twgl.drawBufferInfo(this.gl, this.vao, this.gl.TRIANGLE_STRIP, undefined, undefined, sprites.length);\n    }\n}\n\nfunction makeGridVertices({xcells, ycells}, {w, h}, {lineWidth}) {\n    const position = new Float32Array(2 * (xcells + ycells));\n    const size = new Float32Array(2 * (xcells + ycells));\n    const width = w * (xcells + 1);\n    const height = h * (ycells + 1);\n\n    for (let row = 0; row < ycells; ++row) {\n        position[2 * row] = 0;     // pos x\n        position[2 * row + 1] = row * h; // pos y\n        size[2 * row] = width;     // line length\n        size[2 * row + 1] = lineWidth; // line thickness\n    }\n\n    for (let col = 0; col < xcells; ++col) {\n        position[2 * ycells + 2 * col] = col * w; // pos x\n        position[2 * ycells + 2 * col + 1] = 0;     // pos y\n        size[2 * ycells + 2 * col] = lineWidth; // line length\n        size[2 * ycells + 2 * col + 1] = height;    // line thickness\n    }\n\n    return {\n        position,\n        size\n    }\n}\n\nclass GridOutline {\n    constructor(game) {\n        this.game = game;\n        this.gl = game.gl;\n\n        this.programInfo = this.game.getProgram('grid');\n\n        this.bufferInfo = twgl.createBufferInfoFromArrays(this.gl, {\n            vertex: {\n                data: GRID_VERTICES,\n                numComponents: 2,\n                divisor: 0,\n                drawType: this.gl.STATIC_DRAW\n            },\n            position: {\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            size: {\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            indices: {\n                data: [\n                    0,\n                    1,\n                    2,\n                    3\n                ]\n            }\n        });\n\n        this.vao = twgl.createVertexArrayInfo(this.gl, this.programInfo, this.bufferInfo);\n\n        this.grids = [];\n    }\n\n    addGrid(sx = 32, sy = 32, lineColor = [1, 1, 1, 1], lineWidth = 2) {\n        const xcells = Math.floor(this.game.resolution.width / sx);\n        const ycells = Math.floor(this.game.resolution.height / sy);\n        const instanceCount = xcells + ycells;\n\n        const {position, size} = makeGridVertices({xcells, ycells}, {w: sx, h: sy}, {lineWidth: lineWidth});\n\n        this.grids.push({\n            position,\n            size,\n            instanceCount,\n            lineColor\n        })\n    }\n\n    render() {\n        this.gl.useProgram(this.programInfo.program);\n\n        twgl.setUniforms(this.programInfo, {\n            projection: this.game.projection\n        });\n\n        twgl.setBuffersAndAttributes(this.gl, this.programInfo, this.vao);\n\n        this.grids.forEach(gridInfo => {\n            const {position, size, instanceCount, lineColor} = gridInfo;\n\n            twgl.setAttribInfoBufferFromArray(\n                this.gl,\n                this.bufferInfo.attribs.position,\n                position\n            );\n\n            twgl.setAttribInfoBufferFromArray(\n                this.gl,\n                this.bufferInfo.attribs.size,\n                size\n            );\n\n            twgl.setUniforms(this.programInfo, {\n                line_color: lineColor\n            });\n\n            twgl.drawBufferInfo(this.gl, this.vao, this.gl.TRIANGLE_STRIP, undefined, undefined, instanceCount);\n        });\n    }\n}\n\nclass TilemapRenderer {\n    /*\n    tilemap = {\n        width: width in tiles\n        height: height in tiles\n        tileWidth: tile width in pixels\n        tileHeight: tile height in pixels\n        tiles\n    }\n    */\n    constructor(opts) {\n        const {\n            tilemap,\n            game,\n            textureArray\n        } = opts;\n\n        this.tilemap = tilemap;\n        this.game = game;\n        this.gl = game.gl;\n        this.textureArray = textureArray;\n\n        this.tileWidth = this.tilemap.tileWidth;\n        this.tileHeight = this.tilemap.tileHeight;\n\n        this.programInfo = this.game.getProgram('tilemap');\n\n        this.setup();\n    }\n\n    setup() {\n        this.bufferInfo = twgl.createBufferInfoFromArrays(this.gl, {\n            /* Per-vertex attributes common to each instance. */\n            vertex: {\n                data: new Float32Array([\n                    0, 0, // bottom left\n                    this.tileWidth, 0, // bottom right\n                    0, this.tileHeight, // top left\n                    this.tileWidth, this.tileHeight  // top right\n                ]),\n                numComponents: 2,\n                divisor: 0,\n                drawType: this.gl.STATIC_DRAW\n            },\n\n            position: {\n                numComponents: 3,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n\n            texcoord: {\n                data: [\n                    0, 0,\n                    this.tileWidth, 0,\n                    0, this.tileHeight,\n                    this.tileWidth, this.tileHeight\n                ],\n                numComponents: 2,\n                divisor: 0,\n                drawType: this.gl.STATIC_DRAW\n            },\n\n            tile_index: {\n                numComponents: 1,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW,\n                type: Int16Array\n            },\n\n            indices: {\n                data: [\n                    0,\n                    1,\n                    2,\n                    3\n                ]\n            }\n        });\n\n        this.arrays = {\n            position: new Float32Array(3 * this.maxCells()),\n            tile_index: new Int16Array(this.maxCells())\n        };\n\n        this.vao = twgl.createVertexArrayInfo(this.gl, this.programInfo, this.bufferInfo);\n    }\n\n    /* Returns maximum number of cells that could be rendered. If the display\n    is tw and th tiles wide and high, respectively, the value returned is\n    (tw + 1) * (th + 1) */\n    maxCells() {\n        return this.maxWidthInCells * this.maxHeightInCells;\n    }\n\n    get maxWidthInCells() {\n        return Math.floor(this.game.resolution.width / this.tileWidth) + 1;\n    }\n\n    get maxHeightInCells() {\n        return Math.floor(this.game.resolution.height / this.tileHeight) + 1;\n    }\n\n    draw({x, y, width, height}) {\n        const tileCount = {\n            x: Math.floor(width / this.tileWidth) + 1,\n            y: Math.floor(height / this.tileHeight) + 1\n        };\n\n        const startIndex = {\n            x: Math.floor(x / this.tileWidth),\n            y: Math.floor(y / this.tileHeight)\n        };\n\n        tileCount.x = Math.min(tileCount.x, this.tilemap.width - startIndex.x, this.maxWidthInCells);\n        tileCount.y = Math.min(tileCount.y, this.tilemap.height - startIndex.y, this.maxHeightInCells);\n\n        const offset = {x, y};\n\n        if (x > 0) {\n            offset.x = -(x % this.tileWidth);\n        }\n\n        if (y > 0) {\n            offset.y = -(y % this.tileHeight);\n        }\n\n        const addPosition = arraySetter(this.arrays.position);\n        const addTileIndex = arraySetter(this.arrays.tile_index);\n\n        for (let row = 0; row < tileCount.y; row++) {\n            const yCoord = row*this.tileHeight + offset.y;\n            for (let col = 0; col < tileCount.x; col++) {\n                const xCoord = col*this.tileWidth + offset.x;\n\n                const tile_index = this.tilemap.getTile(col + startIndex.x, row + startIndex.y);\n\n                addPosition([xCoord, yCoord, 0]);\n                addTileIndex(tile_index);\n            }\n        }\n\n        this.gl.useProgram(this.programInfo.program);\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.position,\n            this.arrays.position\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.tile_index,\n            this.arrays.tile_index\n        );\n\n        twgl.setUniforms(this.programInfo, {\n            projection: this.game.projection,\n            texture: this.textureArray,\n            tile_size: [this.tileWidth, this.tileHeight]\n        });\n\n        twgl.setBuffersAndAttributes(this.gl, this.programInfo, this.vao);\n        twgl.drawBufferInfo(this.gl, this.vao, this.gl.TRIANGLE_STRIP, undefined, undefined, tileCount.x * tileCount.y);\n    }\n}\n\n\nclass TilemapTextureBuilder {\n    constructor(opts) {\n        Object.assign(this, {\n            tileWidth: 8,\n            tileHeight: 8,\n            width: 256,\n            height: 1,\n            layers: 2,\n            ...opts\n        });\n\n        this.copyIndex = 0;\n\n        this.texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n        gl.texStorage3D(gl.TEXTURE_2D_ARRAY, 1, gl.RGBA8, this.width * this.tileWidth, this.height * this.tileHeight, this.layers);\n        gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, null);\n\n    }\n\n    tileCoordinates() {\n        return {\n            x: this.copyIndex % this.width,\n            y: Math.floor(this.copyIndex / (this.width)) % this.height,\n            z: Math.floor(this.copyIndex / (this.width * this.height)) % this.layers\n        }\n    }\n\n    addTiles(src) {\n        const tileWide = this.detectWidthInTiles(src);\n        const tileHigh = this.detectHeightInTiles(src);\n\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n\n        canvas.width = src.width;\n        canvas.height = src.height;\n\n        ctx.drawImage(src, 0, 0);\n\n        /**\n         *  Copies pixels in src from the tile starting at (tileX, tileY) to the current\n         * tile and advances the copy index\n         */\n        const copyTile = (tileX, tileY) => {\n            const imageData = ctx.getImageData(\n                tileX * this.tileWidth,\n                tileY * this.tileHeight,\n                this.tileWidth,\n                this.tileHeight\n            );\n\n            const {x, y, z} = this.tileCoordinates();\n\n            gl.texSubImage3D(\n                gl.TEXTURE_2D_ARRAY, // target\n                0,                   // mipmap level, always zero\n                x * this.tileWidth,  // xoffset\n                y * this.tileHeight, // yoffset\n                z,                   // zoffset\n                this.tileWidth,      // width\n                this.tileHeight,     // height\n                1,                   // depth\n                gl.RGBA,             // format, guaranteed by ImageData to be RGBA\n                gl.UNSIGNED_BYTE,    // type, guaranteed by ImageData to be Uint8ClampedArray, i.e. UNSIGNED_BYTE\n                imageData            // pixel data\n            );\n\n            this.copyIndex++;\n        };\n\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n\n        for (let y = 0; y < tileHigh; y++) {\n            for (let x = 0; x < tileWide; x++) {\n                if (this.isFull()) {\n                    break;\n                }\n                copyTile(x, y);\n            }\n        }\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, null);\n    }\n\n    detectWidthInTiles(src) {\n        return Math.floor(src.width / this.tileWidth);\n    }\n\n    detectHeightInTiles(src) {\n        return Math.floor(src.height / this.tileHeight);\n    }\n\n    get layerWidth() {\n        return this.tileWidth * this.width;\n    }\n\n    get layerHeight() {\n        return this.tileHeight * this.height;\n    }\n\n    get maxIndex() {\n        return this.width * this.height * this.layers;\n    }\n\n    isFull() {\n        return this.copyIndex >= this.maxIndex;\n    }\n\n    /**\n     * Reads texture from GL memory returns it as Array of ImageData\n     */\n    readback() {\n        // Uint8Array long enough to hold pixel data for one layer\n        const buffer = new Uint8Array(this.layerWidth * this.layerHeight * 4);\n        const fb = gl.createFramebuffer();\n        const layers = [];\n\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, fb);\n\n        for (let layer = 0; layer < this.layers; layer++) {\n            gl.framebufferTextureLayer(gl.READ_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, this.texture, 0, layer);\n            gl.readPixels(0, 0, this.layerWidth, this.layerHeight, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n            layers.push(new ImageData(new Uint8ClampedArray(buffer), this.layerWidth, this.layerHeight));\n        }\n\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n\n        return layers;\n    }\n\n    // function setTextureFromElement(gl, tex, element, options) {\n    //     options = options || defaults.textureOptions;\n    //     var target = options.target || gl.TEXTURE_2D;\n    //     var level = options.level || 0;\n    //     var width = element.width;\n    //     var height = element.height;\n    //     var internalFormat = options.internalFormat || options.format || gl.RGBA;\n    //     var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n    //     var format = options.format || formatType.format;\n    //     var type = options.type || formatType.type;\n    //     savePackState(gl, options);\n    //     gl.bindTexture(target, tex);\n    //\n    //     gl.texImage2D(target, level, internalFormat, format, type, element);\n    //\n    //     restorePackState(gl, options);\n    //     if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    //         setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n    //     }\n    //     setTextureParameters(gl, tex, options);\n    // }\n}\n\n\nfunction arraySetter(buffer) {\n    let count = 0;\n    return function (newElements) {\n        if (!newElements.length) {\n            newElements = [newElements];\n        }\n        buffer.set(newElements, count);\n        count += newElements.length;\n    }\n}\n\nexport {\n    SpriteRenderer,\n    TilemapRenderer,\n    TilemapTextureBuilder,\n    GridOutline\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/graphics.js","import twgl from 'twgl.js';\n\n/**\n * Creates a GLSL program from sources at two URLs\n *\n * @param {!WebGLRenderingContext} gl The WebGL Context.\n * @param {string} vertexShaderPath The path of the vertex shader file.\n * @param {string} fragmentShaderPath The path of the fragment shader file.\n * @return {!WebGLProgram} A program\n */\nasync function createProgram(gl, vertexShaderPath, fragmentShaderPath) {\n    let vs = await fetch(vertexShaderPath);\n    let fs = await fetch(fragmentShaderPath);\n\n    const args = [\n        await vs.text(),\n        await fs.text()\n    ];\n\n    return twgl.createProgramInfo(gl, args, null, null, err => { throw err });\n}\n\nexport {createProgram};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shader-util.js","\nclass Sprite {\n    constructor({position, size, image, offset}) {\n        this.position = position;\n        this.size = size;\n        this.image = image;\n        this.offset = offset || [0, 0];\n    }\n}\n\nexport {Sprite};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/components.js","import {_} from 'underscore'\nimport twgl from 'twgl.js';\nimport {gl} from 'gl.js';\n\nfunction getGl() {\n    return gl;\n}\n\ngetGl();\n\nfunction createTextures(opts) {\n    return new Promise(function(resolve, reject) {\n        twgl.createTextures(gl, opts, function(errors, textures, images) {\n            resolve({errors, textures, images});\n        });\n    });\n}\n\nclass Loader {\n    constructor(opts) {\n        this.cache = new Map();\n        this.textureCache = new Map();\n        this.programCache = new Map();\n        this.errors = {\n            programs: new Map(),\n            textures: new Map(),\n            paths: new Map()\n        }\n        this.loading = null;\n        this.load(opts);\n    }\n\n    load(opts) {\n        let {basePath,\n            raiseOnFailure,\n            paths,\n            textures,\n            programs} = ({basePath: '', raiseOnFailure: true, ...opts});\n        // trim trailing slashes\n        basePath = basePath.replace(/\\/+$/, '');\n\n        const loadPromise = new Promise(async (resolve, reject) => {\n            if (paths) {\n                await this.loadPaths(paths, basePath, raiseOnFailure);\n            }\n\n            if (textures) {\n                let {errors, textures: tex, images} = await createTextures(textures);\n                if (errors) {\n                    console.log(errors);\n                }\n                Object.keys(tex).forEach((key) => {\n                    this.textureCache.set(key, tex[key]);\n                });\n            }\n\n            if (programs) {\n                for (let progOpts of programs) {\n                    let name = progOpts;\n                    let opts;\n\n                    if (_.isObject(progOpts)) {\n                        name = progOpts.name;\n                        opts = progOpts.opts;\n                    }\n\n                    if (this.programCache.has(name)) {\n                        console.log(`Warning: attempted to load already loaded program '${name}'`);\n                        continue;\n                    }\n\n                    const fp = _.compact([basePath, name.split('.').join('/')]).join('/');\n\n                    const vsName = `${fp}.vert`;\n                    const fsName = `${fp}.frag`;\n                    await this.loadPaths([vsName, fsName], '', raiseOnFailure);\n                    this.programCache.set(\n                        name,\n                        twgl.createProgramInfo(gl, [this.get(vsName), this.get(fsName)], opts)\n                    );\n                }\n            }\n\n            resolve(this);\n        });\n\n        this.loading = this.loading ? this.loading.then(res => loadPromise) : loadPromise;\n\n        return this.loading;\n    }\n\n    get(path) {\n        const ret = this.cache.get(path);\n        if (ret === undefined) {\n            raise `No value for key ${path}`;\n        }\n        return ret;\n    }\n\n    getTexture(name) {\n        const ret = this.textureCache.get(name);\n        if (ret === undefined) {\n            raise `No texture value for key ${path}`;\n        }\n        return ret;\n    }\n\n    getProgram(name) {\n        return this.programCache.get(name)\n    }\n\n    async loadPaths(paths, basePath, raiseOnFailure = true) {\n        for (let path of paths) {\n            if (this.cache.has(basePath + path)) {\n                console.log(`Warning: attempted to load already loaded path '${basePath + path}'`);\n                continue;\n            }\n            const contents = await this.fetch(basePath + path, raiseOnFailure);\n            if (contents) {\n                this.cache.set(basePath + path, contents);\n            }\n        }\n    }\n\n    async fetch(path, raiseOnFailure = true) {\n        const req = await fetch(path);\n\n        if (req.ok) {\n            return await req.text();\n        } else if (raiseOnFailure) {\n            throw `failed to fetch resource '${path}'; got status ${req.status} '${req.statusText}'`;\n        } else {\n            this.errors.paths.set(path, req.statusText);\n\n            return false;\n        }\n    }\n}\n\nexport {Loader};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/resource.js","/*\n** Copyright (c) 2012 The Khronos Group Inc.\n**\n** Permission is hereby granted, free of charge, to any person obtaining a\n** copy of this software and/or associated documentation files (the\n** \"Materials\"), to deal in the Materials without restriction, including\n** without limitation the rights to use, copy, modify, merge, publish,\n** distribute, sublicense, and/or sell copies of the Materials, and to\n** permit persons to whom the Materials are furnished to do so, subject to\n** the following conditions:\n**\n** The above copyright notice and this permission notice shall be included\n** in all copies or substantial portions of the Materials.\n**\n** THE MATERIALS ARE PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.\n*/\n\n// Various functions for helping debug WebGL apps.\n\nWebGLDebugUtils = function() {\n\n/**\n * Wrapped logging function.\n * @param {string} msg Message to log.\n */\nvar log = function(msg) {\n  if (window.console && window.console.log) {\n    window.console.log(msg);\n  }\n};\n\n/**\n * Wrapped error logging function.\n * @param {string} msg Message to log.\n */\nvar error = function(msg) {\n  if (window.console && window.console.error) {\n    window.console.error(msg);\n  } else {\n    log(msg);\n  }\n};\n\n\n/**\n * Which arguments are enums based on the number of arguments to the function.\n * So\n *    'texImage2D': {\n *       9: { 0:true, 2:true, 6:true, 7:true },\n *       6: { 0:true, 2:true, 3:true, 4:true },\n *    },\n *\n * means if there are 9 arguments then 6 and 7 are enums, if there are 6\n * arguments 3 and 4 are enums\n *\n * @type {!Object.<number, !Object.<number, string>}\n */\nvar glValidEnumContexts = {\n  // Generic setters and getters\n\n  'enable': {1: { 0:true }},\n  'disable': {1: { 0:true }},\n  'getParameter': {1: { 0:true }},\n\n  // Rendering\n\n  'drawArrays': {3:{ 0:true }},\n  'drawElements': {4:{ 0:true, 2:true }},\n\n  // Shaders\n\n  'createShader': {1: { 0:true }},\n  'getShaderParameter': {2: { 1:true }},\n  'getProgramParameter': {2: { 1:true }},\n  'getShaderPrecisionFormat': {2: { 0: true, 1:true }},\n\n  // Vertex attributes\n\n  'getVertexAttrib': {2: { 1:true }},\n  'vertexAttribPointer': {6: { 2:true }},\n\n  // Textures\n\n  'bindTexture': {2: { 0:true }},\n  'activeTexture': {1: { 0:true }},\n  'getTexParameter': {2: { 0:true, 1:true }},\n  'texParameterf': {3: { 0:true, 1:true }},\n  'texParameteri': {3: { 0:true, 1:true, 2:true }},\n  // texImage2D and texSubImage2D are defined below with WebGL 2 entrypoints\n  'copyTexImage2D': {8: { 0:true, 2:true }},\n  'copyTexSubImage2D': {8: { 0:true }},\n  'generateMipmap': {1: { 0:true }},\n  // compressedTexImage2D and compressedTexSubImage2D are defined below with WebGL 2 entrypoints\n\n  // Buffer objects\n\n  'bindBuffer': {2: { 0:true }},\n  // bufferData and bufferSubData are defined below with WebGL 2 entrypoints\n  'getBufferParameter': {2: { 0:true, 1:true }},\n\n  // Renderbuffers and framebuffers\n\n  'pixelStorei': {2: { 0:true, 1:true }},\n  // readPixels is defined below with WebGL 2 entrypoints\n  'bindRenderbuffer': {2: { 0:true }},\n  'bindFramebuffer': {2: { 0:true }},\n  'checkFramebufferStatus': {1: { 0:true }},\n  'framebufferRenderbuffer': {4: { 0:true, 1:true, 2:true }},\n  'framebufferTexture2D': {5: { 0:true, 1:true, 2:true }},\n  'getFramebufferAttachmentParameter': {3: { 0:true, 1:true, 2:true }},\n  'getRenderbufferParameter': {2: { 0:true, 1:true }},\n  'renderbufferStorage': {4: { 0:true, 1:true }},\n\n  // Frame buffer operations (clear, blend, depth test, stencil)\n\n  'clear': {1: { 0: { 'enumBitwiseOr': ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }}},\n  'depthFunc': {1: { 0:true }},\n  'blendFunc': {2: { 0:true, 1:true }},\n  'blendFuncSeparate': {4: { 0:true, 1:true, 2:true, 3:true }},\n  'blendEquation': {1: { 0:true }},\n  'blendEquationSeparate': {2: { 0:true, 1:true }},\n  'stencilFunc': {3: { 0:true }},\n  'stencilFuncSeparate': {4: { 0:true, 1:true }},\n  'stencilMaskSeparate': {2: { 0:true }},\n  'stencilOp': {3: { 0:true, 1:true, 2:true }},\n  'stencilOpSeparate': {4: { 0:true, 1:true, 2:true, 3:true }},\n\n  // Culling\n\n  'cullFace': {1: { 0:true }},\n  'frontFace': {1: { 0:true }},\n\n  // ANGLE_instanced_arrays extension\n\n  'drawArraysInstancedANGLE': {4: { 0:true }},\n  'drawElementsInstancedANGLE': {5: { 0:true, 2:true }},\n\n  // EXT_blend_minmax extension\n\n  'blendEquationEXT': {1: { 0:true }},\n\n  // WebGL 2 Buffer objects\n\n  'bufferData': {\n    3: { 0:true, 2:true }, // WebGL 1\n    4: { 0:true, 2:true }, // WebGL 2\n    5: { 0:true, 2:true }  // WebGL 2\n  },\n  'bufferSubData': {\n    3: { 0:true }, // WebGL 1\n    4: { 0:true }, // WebGL 2\n    5: { 0:true }  // WebGL 2\n  },\n  'copyBufferSubData': {5: { 0:true, 1:true }},\n  'getBufferSubData': {3: { 0:true }, 4: { 0:true }, 5: { 0:true }},\n\n  // WebGL 2 Framebuffer objects\n\n  'blitFramebuffer': {10: { 8: { 'enumBitwiseOr': ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }, 9:true }},\n  'framebufferTextureLayer': {5: { 0:true, 1:true }},\n  'invalidateFramebuffer': {2: { 0:true }},\n  'invalidateSubFramebuffer': {6: { 0:true }},\n  'readBuffer': {1: { 0:true }},\n\n  // WebGL 2 Renderbuffer objects\n\n  'getInternalformatParameter': {3: { 0:true, 1:true, 2:true }},\n  'renderbufferStorageMultisample': {5: { 0:true, 2:true }},\n\n  // WebGL 2 Texture objects\n\n  'texStorage2D': {5: { 0:true, 2:true }},\n  'texStorage3D': {6: { 0:true, 2:true }},\n  'texImage2D': {\n    9: { 0:true, 2:true, 6:true, 7:true }, // WebGL 1 & 2\n    6: { 0:true, 2:true, 3:true, 4:true }, // WebGL 1\n    10: { 0:true, 2:true, 6:true, 7:true } // WebGL 2\n  },\n  'texImage3D': {\n    10: { 0:true, 2:true, 7:true, 8:true },\n    11: { 0:true, 2:true, 7:true, 8:true }\n  },\n  'texSubImage2D': {\n    9: { 0:true, 6:true, 7:true }, // WebGL 1 & 2\n    7: { 0:true, 4:true, 5:true }, // WebGL 1\n    10: { 0:true, 6:true, 7:true } // WebGL 2\n  },\n  'texSubImage3D': {\n    11: { 0:true, 8:true, 9:true },\n    12: { 0:true, 8:true, 9:true }\n  },\n  'copyTexSubImage3D': {9: { 0:true }},\n  'compressedTexImage2D': {\n    7: { 0: true, 2:true }, // WebGL 1 & 2\n    8: { 0: true, 2:true }, // WebGL 2\n    9: { 0: true, 2:true }  // WebGL 2\n  },\n  'compressedTexImage3D': {\n    8: { 0: true, 2:true },\n    9: { 0: true, 2:true },\n    10: { 0: true, 2:true }\n  },\n  'compressedTexSubImage2D': {\n    8: { 0: true, 6:true }, // WebGL 1 & 2\n    9: { 0: true, 6:true }, // WebGL 2\n    10: { 0: true, 6:true } // WebGL 2\n  },\n  'compressedTexSubImage3D': {\n    10: { 0: true, 8:true },\n    11: { 0: true, 8:true },\n    12: { 0: true, 8:true }\n  },\n\n  // WebGL 2 Vertex attribs\n\n  'vertexAttribIPointer': {5: { 2:true }},\n\n  // WebGL 2 Writing to the drawing buffer\n\n  'drawArraysInstanced': {4: { 0:true }},\n  'drawElementsInstanced': {5: { 0:true, 2:true }},\n  'drawRangeElements': {6: { 0:true, 4:true }},\n\n  // WebGL 2 Reading back pixels\n\n  'readPixels': {\n    7: { 4:true, 5:true }, // WebGL 1 & 2\n    8: { 4:true, 5:true }  // WebGL 2\n  },\n\n  // WebGL 2 Multiple Render Targets\n\n  'clearBufferfv': {3: { 0:true }, 4: { 0:true }},\n  'clearBufferiv': {3: { 0:true }, 4: { 0:true }},\n  'clearBufferuiv': {3: { 0:true }, 4: { 0:true }},\n  'clearBufferfi': {4: { 0:true }},\n\n  // WebGL 2 Query objects\n\n  'beginQuery': {2: { 0:true }},\n  'endQuery': {1: { 0:true }},\n  'getQuery': {2: { 0:true, 1:true }},\n  'getQueryParameter': {2: { 1:true }},\n\n  // WebGL 2 Sampler objects\n\n  'samplerParameteri': {3: { 1:true, 2:true }},\n  'samplerParameterf': {3: { 1:true }},\n  'getSamplerParameter': {2: { 1:true }},\n\n  // WebGL 2 Sync objects\n\n  'fenceSync': {2: { 0:true, 1: { 'enumBitwiseOr': [] } }},\n  'clientWaitSync': {3: { 1: { 'enumBitwiseOr': ['SYNC_FLUSH_COMMANDS_BIT'] } }},\n  'waitSync': {3: { 1: { 'enumBitwiseOr': [] } }},\n  'getSyncParameter': {2: { 1:true }},\n\n  // WebGL 2 Transform Feedback\n\n  'bindTransformFeedback': {2: { 0:true }},\n  'beginTransformFeedback': {1: { 0:true }},\n  'transformFeedbackVaryings': {3: { 2:true }},\n\n  // WebGL2 Uniform Buffer Objects and Transform Feedback Buffers\n\n  'bindBufferBase': {3: { 0:true }},\n  'bindBufferRange': {5: { 0:true }},\n  'getIndexedParameter': {2: { 0:true }},\n  'getActiveUniforms': {3: { 2:true }},\n  'getActiveUniformBlockParameter': {3: { 2:true }}\n};\n\n/**\n * Map of numbers to names.\n * @type {Object}\n */\nvar glEnums = null;\n\n/**\n * Map of names to numbers.\n * @type {Object}\n */\nvar enumStringToValue = null;\n\n/**\n * Initializes this module. Safe to call more than once.\n * @param {!WebGLRenderingContext} ctx A WebGL context. If\n *    you have more than one context it doesn't matter which one\n *    you pass in, it is only used to pull out constants.\n */\nfunction init(ctx) {\n  if (glEnums == null) {\n    glEnums = { };\n    enumStringToValue = { };\n    for (var propertyName in ctx) {\n      if (typeof ctx[propertyName] == 'number') {\n        glEnums[ctx[propertyName]] = propertyName;\n        enumStringToValue[propertyName] = ctx[propertyName];\n      }\n    }\n  }\n}\n\n/**\n * Checks the utils have been initialized.\n */\nfunction checkInit() {\n  if (glEnums == null) {\n    throw 'WebGLDebugUtils.init(ctx) not called';\n  }\n}\n\n/**\n * Returns true or false if value matches any WebGL enum\n * @param {*} value Value to check if it might be an enum.\n * @return {boolean} True if value matches one of the WebGL defined enums\n */\nfunction mightBeEnum(value) {\n  checkInit();\n  return (glEnums[value] !== undefined);\n}\n\n/**\n * Gets an string version of an WebGL enum.\n *\n * Example:\n *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());\n *\n * @param {number} value Value to return an enum for\n * @return {string} The string version of the enum.\n */\nfunction glEnumToString(value) {\n  checkInit();\n  var name = glEnums[value];\n  return (name !== undefined) ? (\"gl.\" + name) :\n      (\"/*UNKNOWN WebGL ENUM*/ 0x\" + value.toString(16) + \"\");\n}\n\n/**\n * Returns the string version of a WebGL argument.\n * Attempts to convert enum arguments to strings.\n * @param {string} functionName the name of the WebGL function.\n * @param {number} numArgs the number of arguments passed to the function.\n * @param {number} argumentIndx the index of the argument.\n * @param {*} value The value of the argument.\n * @return {string} The value as a string.\n */\nfunction glFunctionArgToString(functionName, numArgs, argumentIndex, value) {\n  var funcInfo = glValidEnumContexts[functionName];\n  if (funcInfo !== undefined) {\n    var funcInfo = funcInfo[numArgs];\n    if (funcInfo !== undefined) {\n      if (funcInfo[argumentIndex]) {\n        if (typeof funcInfo[argumentIndex] === 'object' &&\n            funcInfo[argumentIndex]['enumBitwiseOr'] !== undefined) {\n          var enums = funcInfo[argumentIndex]['enumBitwiseOr'];\n          var orResult = 0;\n          var orEnums = [];\n          for (var i = 0; i < enums.length; ++i) {\n            var enumValue = enumStringToValue[enums[i]];\n            if ((value & enumValue) !== 0) {\n              orResult |= enumValue;\n              orEnums.push(glEnumToString(enumValue));\n            }\n          }\n          if (orResult === value) {\n            return orEnums.join(' | ');\n          } else {\n            return glEnumToString(value);\n          }\n        } else {\n          return glEnumToString(value);\n        }\n      }\n    }\n  }\n  if (value === null) {\n    return \"null\";\n  } else if (value === undefined) {\n    return \"undefined\";\n  } else {\n    return value.toString();\n  }\n}\n\n/**\n * Converts the arguments of a WebGL function to a string.\n * Attempts to convert enum arguments to strings.\n *\n * @param {string} functionName the name of the WebGL function.\n * @param {number} args The arguments.\n * @return {string} The arguments as a string.\n */\nfunction glFunctionArgsToString(functionName, args) {\n  // apparently we can't do args.join(\",\");\n  var argStr = \"\";\n  var numArgs = args.length;\n  for (var ii = 0; ii < numArgs; ++ii) {\n    argStr += ((ii == 0) ? '' : ', ') +\n        glFunctionArgToString(functionName, numArgs, ii, args[ii]);\n  }\n  return argStr;\n};\n\n\nfunction makePropertyWrapper(wrapper, original, propertyName) {\n  //log(\"wrap prop: \" + propertyName);\n  wrapper.__defineGetter__(propertyName, function() {\n    return original[propertyName];\n  });\n  // TODO(gmane): this needs to handle properties that take more than\n  // one value?\n  wrapper.__defineSetter__(propertyName, function(value) {\n    //log(\"set: \" + propertyName);\n    original[propertyName] = value;\n  });\n}\n\n// Makes a function that calls a function on another object.\nfunction makeFunctionWrapper(original, functionName) {\n  //log(\"wrap fn: \" + functionName);\n  var f = original[functionName];\n  return function() {\n    //log(\"call: \" + functionName);\n    var result = f.apply(original, arguments);\n    return result;\n  };\n}\n\n/**\n * Given a WebGL context returns a wrapped context that calls\n * gl.getError after every command and calls a function if the\n * result is not gl.NO_ERROR.\n *\n * @param {!WebGLRenderingContext} ctx The webgl context to\n *        wrap.\n * @param {!function(err, funcName, args): void} opt_onErrorFunc\n *        The function to call when gl.getError returns an\n *        error. If not specified the default function calls\n *        console.log with a message.\n * @param {!function(funcName, args): void} opt_onFunc The\n *        function to call when each webgl function is called.\n *        You can use this to log all calls for example.\n * @param {!WebGLRenderingContext} opt_err_ctx The webgl context\n *        to call getError on if different than ctx.\n */\nfunction makeDebugContext(ctx, opt_onErrorFunc, opt_onFunc, opt_err_ctx) {\n  opt_err_ctx = opt_err_ctx || ctx;\n  init(ctx);\n  opt_onErrorFunc = opt_onErrorFunc || function(err, functionName, args) {\n        // apparently we can't do args.join(\",\");\n        var argStr = \"\";\n        var numArgs = args.length;\n        for (var ii = 0; ii < numArgs; ++ii) {\n          argStr += ((ii == 0) ? '' : ', ') +\n              glFunctionArgToString(functionName, numArgs, ii, args[ii]);\n        }\n        error(\"WebGL error \"+ glEnumToString(err) + \" in \"+ functionName +\n              \"(\" + argStr + \")\");\n      };\n\n  // Holds booleans for each GL error so after we get the error ourselves\n  // we can still return it to the client app.\n  var glErrorShadow = { };\n\n  // Makes a function that calls a WebGL function and then calls getError.\n  function makeErrorWrapper(ctx, functionName) {\n    return function() {\n      if (opt_onFunc) {\n        opt_onFunc(functionName, arguments);\n      }\n      var result = ctx[functionName].apply(ctx, arguments);\n      var err = opt_err_ctx.getError();\n      if (err != 0) {\n        glErrorShadow[err] = true;\n        opt_onErrorFunc(err, functionName, arguments);\n      }\n      return result;\n    };\n  }\n\n  // Make a an object that has a copy of every property of the WebGL context\n  // but wraps all functions.\n  var wrapper = {};\n  for (var propertyName in ctx) {\n    if (typeof ctx[propertyName] == 'function') {\n      if (propertyName != 'getExtension') {\n        wrapper[propertyName] = makeErrorWrapper(ctx, propertyName);\n      } else {\n        var wrapped = makeErrorWrapper(ctx, propertyName);\n        wrapper[propertyName] = function () {\n          var result = wrapped.apply(ctx, arguments);\n          if (!result) {\n            return null;\n          }\n          return makeDebugContext(result, opt_onErrorFunc, opt_onFunc, opt_err_ctx);\n        };\n      }\n    } else {\n      makePropertyWrapper(wrapper, ctx, propertyName);\n    }\n  }\n\n  // Override the getError function with one that returns our saved results.\n  wrapper.getError = function() {\n    for (var err in glErrorShadow) {\n      if (glErrorShadow.hasOwnProperty(err)) {\n        if (glErrorShadow[err]) {\n          glErrorShadow[err] = false;\n          return err;\n        }\n      }\n    }\n    return ctx.NO_ERROR;\n  };\n\n  return wrapper;\n}\n\nfunction resetToInitialState(ctx) {\n  var isWebGL2RenderingContext = !!ctx.createTransformFeedback;\n\n  if (isWebGL2RenderingContext) {\n    ctx.bindVertexArray(null);\n  }\n\n  var numAttribs = ctx.getParameter(ctx.MAX_VERTEX_ATTRIBS);\n  var tmp = ctx.createBuffer();\n  ctx.bindBuffer(ctx.ARRAY_BUFFER, tmp);\n  for (var ii = 0; ii < numAttribs; ++ii) {\n    ctx.disableVertexAttribArray(ii);\n    ctx.vertexAttribPointer(ii, 4, ctx.FLOAT, false, 0, 0);\n    ctx.vertexAttrib1f(ii, 0);\n    if (isWebGL2RenderingContext) {\n      ctx.vertexAttribDivisor(ii, 0);\n    }\n  }\n  ctx.deleteBuffer(tmp);\n\n  var numTextureUnits = ctx.getParameter(ctx.MAX_TEXTURE_IMAGE_UNITS);\n  for (var ii = 0; ii < numTextureUnits; ++ii) {\n    ctx.activeTexture(ctx.TEXTURE0 + ii);\n    ctx.bindTexture(ctx.TEXTURE_CUBE_MAP, null);\n    ctx.bindTexture(ctx.TEXTURE_2D, null);\n    if (isWebGL2RenderingContext) {\n      ctx.bindTexture(ctx.TEXTURE_2D_ARRAY, null);\n      ctx.bindTexture(ctx.TEXTURE_3D, null);\n      ctx.bindSampler(ii, null);\n    }\n  }\n\n  ctx.activeTexture(ctx.TEXTURE0);\n  ctx.useProgram(null);\n  ctx.bindBuffer(ctx.ARRAY_BUFFER, null);\n  ctx.bindBuffer(ctx.ELEMENT_ARRAY_BUFFER, null);\n  ctx.bindFramebuffer(ctx.FRAMEBUFFER, null);\n  ctx.bindRenderbuffer(ctx.RENDERBUFFER, null);\n  ctx.disable(ctx.BLEND);\n  ctx.disable(ctx.CULL_FACE);\n  ctx.disable(ctx.DEPTH_TEST);\n  ctx.disable(ctx.DITHER);\n  ctx.disable(ctx.SCISSOR_TEST);\n  ctx.blendColor(0, 0, 0, 0);\n  ctx.blendEquation(ctx.FUNC_ADD);\n  ctx.blendFunc(ctx.ONE, ctx.ZERO);\n  ctx.clearColor(0, 0, 0, 0);\n  ctx.clearDepth(1);\n  ctx.clearStencil(-1);\n  ctx.colorMask(true, true, true, true);\n  ctx.cullFace(ctx.BACK);\n  ctx.depthFunc(ctx.LESS);\n  ctx.depthMask(true);\n  ctx.depthRange(0, 1);\n  ctx.frontFace(ctx.CCW);\n  ctx.hint(ctx.GENERATE_MIPMAP_HINT, ctx.DONT_CARE);\n  ctx.lineWidth(1);\n  ctx.pixelStorei(ctx.PACK_ALIGNMENT, 4);\n  ctx.pixelStorei(ctx.UNPACK_ALIGNMENT, 4);\n  ctx.pixelStorei(ctx.UNPACK_FLIP_Y_WEBGL, false);\n  ctx.pixelStorei(ctx.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n  // TODO: Delete this IF.\n  if (ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL) {\n    ctx.pixelStorei(ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL, ctx.BROWSER_DEFAULT_WEBGL);\n  }\n  ctx.polygonOffset(0, 0);\n  ctx.sampleCoverage(1, false);\n  ctx.scissor(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.stencilFunc(ctx.ALWAYS, 0, 0xFFFFFFFF);\n  ctx.stencilMask(0xFFFFFFFF);\n  ctx.stencilOp(ctx.KEEP, ctx.KEEP, ctx.KEEP);\n  ctx.viewport(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.clear(ctx.COLOR_BUFFER_BIT | ctx.DEPTH_BUFFER_BIT | ctx.STENCIL_BUFFER_BIT);\n\n  if (isWebGL2RenderingContext) {\n    ctx.drawBuffers([ctx.BACK]);\n    ctx.readBuffer(ctx.BACK);\n    ctx.bindBuffer(ctx.COPY_READ_BUFFER, null);\n    ctx.bindBuffer(ctx.COPY_WRITE_BUFFER, null);\n    ctx.bindBuffer(ctx.PIXEL_PACK_BUFFER, null);\n    ctx.bindBuffer(ctx.PIXEL_UNPACK_BUFFER, null);\n    var numTransformFeedbacks = ctx.getParameter(ctx.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS);\n    for (var ii = 0; ii < numTransformFeedbacks; ++ii) {\n      ctx.bindBufferBase(ctx.TRANSFORM_FEEDBACK_BUFFER, ii, null);\n    }\n    var numUBOs = ctx.getParameter(ctx.MAX_UNIFORM_BUFFER_BINDINGS);\n    for (var ii = 0; ii < numUBOs; ++ii) {\n      ctx.bindBufferBase(ctx.UNIFORM_BUFFER, ii, null);\n    }\n    ctx.disable(ctx.RASTERIZER_DISCARD);\n    ctx.pixelStorei(ctx.UNPACK_IMAGE_HEIGHT, 0);\n    ctx.pixelStorei(ctx.UNPACK_SKIP_IMAGES, 0);\n    ctx.pixelStorei(ctx.UNPACK_ROW_LENGTH, 0);\n    ctx.pixelStorei(ctx.UNPACK_SKIP_ROWS, 0);\n    ctx.pixelStorei(ctx.UNPACK_SKIP_PIXELS, 0);\n    ctx.pixelStorei(ctx.PACK_ROW_LENGTH, 0);\n    ctx.pixelStorei(ctx.PACK_SKIP_ROWS, 0);\n    ctx.pixelStorei(ctx.PACK_SKIP_PIXELS, 0);\n    ctx.hint(ctx.FRAGMENT_SHADER_DERIVATIVE_HINT, ctx.DONT_CARE);\n  }\n\n  // TODO: This should NOT be needed but Firefox fails with 'hint'\n  while(ctx.getError());\n}\n\nfunction makeLostContextSimulatingCanvas(canvas) {\n  var unwrappedContext_;\n  var wrappedContext_;\n  var onLost_ = [];\n  var onRestored_ = [];\n  var wrappedContext_ = {};\n  var contextId_ = 1;\n  var contextLost_ = false;\n  var resourceId_ = 0;\n  var resourceDb_ = [];\n  var numCallsToLoseContext_ = 0;\n  var numCalls_ = 0;\n  var canRestore_ = false;\n  var restoreTimeout_ = 0;\n  var isWebGL2RenderingContext;\n\n  // Holds booleans for each GL error so can simulate errors.\n  var glErrorShadow_ = { };\n\n  canvas.getContext = function(f) {\n    return function() {\n      var ctx = f.apply(canvas, arguments);\n      // Did we get a context and is it a WebGL context?\n      if ((ctx instanceof WebGLRenderingContext) || (window.WebGL2RenderingContext && (ctx instanceof WebGL2RenderingContext))) {\n        if (ctx != unwrappedContext_) {\n          if (unwrappedContext_) {\n            throw \"got different context\"\n          }\n          isWebGL2RenderingContext = window.WebGL2RenderingContext && (ctx instanceof WebGL2RenderingContext);\n          unwrappedContext_ = ctx;\n          wrappedContext_ = makeLostContextSimulatingContext(unwrappedContext_);\n        }\n        return wrappedContext_;\n      }\n      return ctx;\n    }\n  }(canvas.getContext);\n\n  function wrapEvent(listener) {\n    if (typeof(listener) == \"function\") {\n      return listener;\n    } else {\n      return function(info) {\n        listener.handleEvent(info);\n      }\n    }\n  }\n\n  var addOnContextLostListener = function(listener) {\n    onLost_.push(wrapEvent(listener));\n  };\n\n  var addOnContextRestoredListener = function(listener) {\n    onRestored_.push(wrapEvent(listener));\n  };\n\n\n  function wrapAddEventListener(canvas) {\n    var f = canvas.addEventListener;\n    canvas.addEventListener = function(type, listener, bubble) {\n      switch (type) {\n        case 'webglcontextlost':\n          addOnContextLostListener(listener);\n          break;\n        case 'webglcontextrestored':\n          addOnContextRestoredListener(listener);\n          break;\n        default:\n          f.apply(canvas, arguments);\n      }\n    };\n  }\n\n  wrapAddEventListener(canvas);\n\n  canvas.loseContext = function() {\n    if (!contextLost_) {\n      contextLost_ = true;\n      numCallsToLoseContext_ = 0;\n      ++contextId_;\n      while (unwrappedContext_.getError());\n      clearErrors();\n      glErrorShadow_[unwrappedContext_.CONTEXT_LOST_WEBGL] = true;\n      var event = makeWebGLContextEvent(\"context lost\");\n      var callbacks = onLost_.slice();\n      setTimeout(function() {\n          //log(\"numCallbacks:\" + callbacks.length);\n          for (var ii = 0; ii < callbacks.length; ++ii) {\n            //log(\"calling callback:\" + ii);\n            callbacks[ii](event);\n          }\n          if (restoreTimeout_ >= 0) {\n            setTimeout(function() {\n                canvas.restoreContext();\n              }, restoreTimeout_);\n          }\n        }, 0);\n    }\n  };\n\n  canvas.restoreContext = function() {\n    if (contextLost_) {\n      if (onRestored_.length) {\n        setTimeout(function() {\n            if (!canRestore_) {\n              throw \"can not restore. webglcontestlost listener did not call event.preventDefault\";\n            }\n            freeResources();\n            resetToInitialState(unwrappedContext_);\n            contextLost_ = false;\n            numCalls_ = 0;\n            canRestore_ = false;\n            var callbacks = onRestored_.slice();\n            var event = makeWebGLContextEvent(\"context restored\");\n            for (var ii = 0; ii < callbacks.length; ++ii) {\n              callbacks[ii](event);\n            }\n          }, 0);\n      }\n    }\n  };\n\n  canvas.loseContextInNCalls = function(numCalls) {\n    if (contextLost_) {\n      throw \"You can not ask a lost contet to be lost\";\n    }\n    numCallsToLoseContext_ = numCalls_ + numCalls;\n  };\n\n  canvas.getNumCalls = function() {\n    return numCalls_;\n  };\n\n  canvas.setRestoreTimeout = function(timeout) {\n    restoreTimeout_ = timeout;\n  };\n\n  function isWebGLObject(obj) {\n    //return false;\n    return (obj instanceof WebGLBuffer ||\n            obj instanceof WebGLFramebuffer ||\n            obj instanceof WebGLProgram ||\n            obj instanceof WebGLRenderbuffer ||\n            obj instanceof WebGLShader ||\n            obj instanceof WebGLTexture);\n  }\n\n  function checkResources(args) {\n    for (var ii = 0; ii < args.length; ++ii) {\n      var arg = args[ii];\n      if (isWebGLObject(arg)) {\n        return arg.__webglDebugContextLostId__ == contextId_;\n      }\n    }\n    return true;\n  }\n\n  function clearErrors() {\n    var k = Object.keys(glErrorShadow_);\n    for (var ii = 0; ii < k.length; ++ii) {\n      delete glErrorShadow_[k[ii]];\n    }\n  }\n\n  function loseContextIfTime() {\n    ++numCalls_;\n    if (!contextLost_) {\n      if (numCallsToLoseContext_ == numCalls_) {\n        canvas.loseContext();\n      }\n    }\n  }\n\n  // Makes a function that simulates WebGL when out of context.\n  function makeLostContextFunctionWrapper(ctx, functionName) {\n    var f = ctx[functionName];\n    return function() {\n      // log(\"calling:\" + functionName);\n      // Only call the functions if the context is not lost.\n      loseContextIfTime();\n      if (!contextLost_) {\n        //if (!checkResources(arguments)) {\n        //  glErrorShadow_[wrappedContext_.INVALID_OPERATION] = true;\n        //  return;\n        //}\n        var result = f.apply(ctx, arguments);\n        return result;\n      }\n    };\n  }\n\n  function freeResources() {\n    for (var ii = 0; ii < resourceDb_.length; ++ii) {\n      var resource = resourceDb_[ii];\n      if (resource instanceof WebGLBuffer) {\n        unwrappedContext_.deleteBuffer(resource);\n      } else if (resource instanceof WebGLFramebuffer) {\n        unwrappedContext_.deleteFramebuffer(resource);\n      } else if (resource instanceof WebGLProgram) {\n        unwrappedContext_.deleteProgram(resource);\n      } else if (resource instanceof WebGLRenderbuffer) {\n        unwrappedContext_.deleteRenderbuffer(resource);\n      } else if (resource instanceof WebGLShader) {\n        unwrappedContext_.deleteShader(resource);\n      } else if (resource instanceof WebGLTexture) {\n        unwrappedContext_.deleteTexture(resource);\n      }\n      else if (isWebGL2RenderingContext) {\n        if (resource instanceof WebGLQuery) {\n          unwrappedContext_.deleteQuery(resource);\n        } else if (resource instanceof WebGLSampler) {\n          unwrappedContext_.deleteSampler(resource);\n        } else if (resource instanceof WebGLSync) {\n          unwrappedContext_.deleteSync(resource);\n        } else if (resource instanceof WebGLTransformFeedback) {\n          unwrappedContext_.deleteTransformFeedback(resource);\n        } else if (resource instanceof WebGLVertexArrayObject) {\n          unwrappedContext_.deleteVertexArray(resource);\n        }\n      }\n    }\n  }\n\n  function makeWebGLContextEvent(statusMessage) {\n    return {\n      statusMessage: statusMessage,\n      preventDefault: function() {\n          canRestore_ = true;\n        }\n    };\n  }\n\n  return canvas;\n\n  function makeLostContextSimulatingContext(ctx) {\n    // copy all functions and properties to wrapper\n    for (var propertyName in ctx) {\n      if (typeof ctx[propertyName] == 'function') {\n         wrappedContext_[propertyName] = makeLostContextFunctionWrapper(\n             ctx, propertyName);\n       } else {\n         makePropertyWrapper(wrappedContext_, ctx, propertyName);\n       }\n    }\n\n    // Wrap a few functions specially.\n    wrappedContext_.getError = function() {\n      loseContextIfTime();\n      if (!contextLost_) {\n        var err;\n        while (err = unwrappedContext_.getError()) {\n          glErrorShadow_[err] = true;\n        }\n      }\n      for (var err in glErrorShadow_) {\n        if (glErrorShadow_[err]) {\n          delete glErrorShadow_[err];\n          return err;\n        }\n      }\n      return wrappedContext_.NO_ERROR;\n    };\n\n    var creationFunctions = [\n      \"createBuffer\",\n      \"createFramebuffer\",\n      \"createProgram\",\n      \"createRenderbuffer\",\n      \"createShader\",\n      \"createTexture\"\n    ];\n    if (isWebGL2RenderingContext) {\n      creationFunctions.push(\n        \"createQuery\",\n        \"createSampler\",\n        \"fenceSync\",\n        \"createTransformFeedback\",\n        \"createVertexArray\"\n      );\n    }\n    for (var ii = 0; ii < creationFunctions.length; ++ii) {\n      var functionName = creationFunctions[ii];\n      wrappedContext_[functionName] = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return null;\n          }\n          var obj = f.apply(ctx, arguments);\n          obj.__webglDebugContextLostId__ = contextId_;\n          resourceDb_.push(obj);\n          return obj;\n        };\n      }(ctx[functionName]);\n    }\n\n    var functionsThatShouldReturnNull = [\n      \"getActiveAttrib\",\n      \"getActiveUniform\",\n      \"getBufferParameter\",\n      \"getContextAttributes\",\n      \"getAttachedShaders\",\n      \"getFramebufferAttachmentParameter\",\n      \"getParameter\",\n      \"getProgramParameter\",\n      \"getProgramInfoLog\",\n      \"getRenderbufferParameter\",\n      \"getShaderParameter\",\n      \"getShaderInfoLog\",\n      \"getShaderSource\",\n      \"getTexParameter\",\n      \"getUniform\",\n      \"getUniformLocation\",\n      \"getVertexAttrib\"\n    ];\n    if (isWebGL2RenderingContext) {\n      functionsThatShouldReturnNull.push(\n        \"getInternalformatParameter\",\n        \"getQuery\",\n        \"getQueryParameter\",\n        \"getSamplerParameter\",\n        \"getSyncParameter\",\n        \"getTransformFeedbackVarying\",\n        \"getIndexedParameter\",\n        \"getUniformIndices\",\n        \"getActiveUniforms\",\n        \"getActiveUniformBlockParameter\",\n        \"getActiveUniformBlockName\"\n      );\n    }\n    for (var ii = 0; ii < functionsThatShouldReturnNull.length; ++ii) {\n      var functionName = functionsThatShouldReturnNull[ii];\n      wrappedContext_[functionName] = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return null;\n          }\n          return f.apply(ctx, arguments);\n        }\n      }(wrappedContext_[functionName]);\n    }\n\n    var isFunctions = [\n      \"isBuffer\",\n      \"isEnabled\",\n      \"isFramebuffer\",\n      \"isProgram\",\n      \"isRenderbuffer\",\n      \"isShader\",\n      \"isTexture\"\n    ];\n    if (isWebGL2RenderingContext) {\n      isFunctions.push(\n        \"isQuery\",\n        \"isSampler\",\n        \"isSync\",\n        \"isTransformFeedback\",\n        \"isVertexArray\"\n      );\n    }\n    for (var ii = 0; ii < isFunctions.length; ++ii) {\n      var functionName = isFunctions[ii];\n      wrappedContext_[functionName] = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return false;\n          }\n          return f.apply(ctx, arguments);\n        }\n      }(wrappedContext_[functionName]);\n    }\n\n    wrappedContext_.checkFramebufferStatus = function(f) {\n      return function() {\n        loseContextIfTime();\n        if (contextLost_) {\n          return wrappedContext_.FRAMEBUFFER_UNSUPPORTED;\n        }\n        return f.apply(ctx, arguments);\n      };\n    }(wrappedContext_.checkFramebufferStatus);\n\n    wrappedContext_.getAttribLocation = function(f) {\n      return function() {\n        loseContextIfTime();\n        if (contextLost_) {\n          return -1;\n        }\n        return f.apply(ctx, arguments);\n      };\n    }(wrappedContext_.getAttribLocation);\n\n    wrappedContext_.getVertexAttribOffset = function(f) {\n      return function() {\n        loseContextIfTime();\n        if (contextLost_) {\n          return 0;\n        }\n        return f.apply(ctx, arguments);\n      };\n    }(wrappedContext_.getVertexAttribOffset);\n\n    wrappedContext_.isContextLost = function() {\n      return contextLost_;\n    };\n\n    if (isWebGL2RenderingContext) {\n      wrappedContext_.getFragDataLocation = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return -1;\n          }\n          return f.apply(ctx, arguments);\n        };\n      }(wrappedContext_.getFragDataLocation);\n\n      wrappedContext_.clientWaitSync = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return wrappedContext_.WAIT_FAILED;\n          }\n          return f.apply(ctx, arguments);\n        };\n      }(wrappedContext_.clientWaitSync);\n\n      wrappedContext_.getUniformBlockIndex = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return wrappedContext_.INVALID_INDEX;\n          }\n          return f.apply(ctx, arguments);\n        };\n      }(wrappedContext_.getUniformBlockIndex);\n    }\n\n    return wrappedContext_;\n  }\n}\n\nreturn {\n  /**\n   * Initializes this module. Safe to call more than once.\n   * @param {!WebGLRenderingContext} ctx A WebGL context. If\n   *    you have more than one context it doesn't matter which one\n   *    you pass in, it is only used to pull out constants.\n   */\n  'init': init,\n\n  /**\n   * Returns true or false if value matches any WebGL enum\n   * @param {*} value Value to check if it might be an enum.\n   * @return {boolean} True if value matches one of the WebGL defined enums\n   */\n  'mightBeEnum': mightBeEnum,\n\n  /**\n   * Gets an string version of an WebGL enum.\n   *\n   * Example:\n   *   WebGLDebugUtil.init(ctx);\n   *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());\n   *\n   * @param {number} value Value to return an enum for\n   * @return {string} The string version of the enum.\n   */\n  'glEnumToString': glEnumToString,\n\n  /**\n   * Converts the argument of a WebGL function to a string.\n   * Attempts to convert enum arguments to strings.\n   *\n   * Example:\n   *   WebGLDebugUtil.init(ctx);\n   *   var str = WebGLDebugUtil.glFunctionArgToString('bindTexture', 2, 0, gl.TEXTURE_2D);\n   *\n   * would return 'TEXTURE_2D'\n   *\n   * @param {string} functionName the name of the WebGL function.\n   * @param {number} numArgs The number of arguments\n   * @param {number} argumentIndx the index of the argument.\n   * @param {*} value The value of the argument.\n   * @return {string} The value as a string.\n   */\n  'glFunctionArgToString': glFunctionArgToString,\n\n  /**\n   * Converts the arguments of a WebGL function to a string.\n   * Attempts to convert enum arguments to strings.\n   *\n   * @param {string} functionName the name of the WebGL function.\n   * @param {number} args The arguments.\n   * @return {string} The arguments as a string.\n   */\n  'glFunctionArgsToString': glFunctionArgsToString,\n\n  /**\n   * Given a WebGL context returns a wrapped context that calls\n   * gl.getError after every command and calls a function if the\n   * result is not NO_ERROR.\n   *\n   * You can supply your own function if you want. For example, if you'd like\n   * an exception thrown on any GL error you could do this\n   *\n   *    function throwOnGLError(err, funcName, args) {\n   *      throw WebGLDebugUtils.glEnumToString(err) +\n   *            \" was caused by call to \" + funcName;\n   *    };\n   *\n   *    ctx = WebGLDebugUtils.makeDebugContext(\n   *        canvas.getContext(\"webgl\"), throwOnGLError);\n   *\n   * @param {!WebGLRenderingContext} ctx The webgl context to wrap.\n   * @param {!function(err, funcName, args): void} opt_onErrorFunc The function\n   *     to call when gl.getError returns an error. If not specified the default\n   *     function calls console.log with a message.\n   * @param {!function(funcName, args): void} opt_onFunc The\n   *     function to call when each webgl function is called. You\n   *     can use this to log all calls for example.\n   */\n  'makeDebugContext': makeDebugContext,\n\n  /**\n   * Given a canvas element returns a wrapped canvas element that will\n   * simulate lost context. The canvas returned adds the following functions.\n   *\n   * loseContext:\n   *   simulates a lost context event.\n   *\n   * restoreContext:\n   *   simulates the context being restored.\n   *\n   * lostContextInNCalls:\n   *   loses the context after N gl calls.\n   *\n   * getNumCalls:\n   *   tells you how many gl calls there have been so far.\n   *\n   * setRestoreTimeout:\n   *   sets the number of milliseconds until the context is restored\n   *   after it has been lost. Defaults to 0. Pass -1 to prevent\n   *   automatic restoring.\n   *\n   * @param {!Canvas} canvas The canvas element to wrap.\n   */\n  'makeLostContextSimulatingCanvas': makeLostContextSimulatingCanvas,\n\n  /**\n   * Resets a context to the initial state.\n   * @param {!WebGLRenderingContext} ctx The webgl context to\n   *     reset.\n   */\n  'resetToInitialState': resetToInitialState\n};\n\n}();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/vendor/webgl-debug.js\n// module id = 66\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"html {\\n    height: 100%;\\n    background-color: #555;\\n    color: #eee;\\n    font-family: monospace;\\n}\\n\\nbody {\\n    padding: 0;\\n    margin: 0;\\n    height: 100%;\\n}\\n\\n#content {\\n    width: 100%;\\n    height: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\\n\\ncanvas.game {\\n    width: 100vw;\\n    height: 100vh;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./src/css/app.css\n// module id = 67\n// module chunks = 1"],"sourceRoot":""}